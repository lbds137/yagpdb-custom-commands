{{- /*
  Author: Vladlena Costescu (@lbds137)
  Trigger type: `Command`
  Trigger: `rand_hebrew`
  Dependencies: `embed_exec`, `gematria`
*/ -}}

{{ $hebrewDict := sdict
    "0" "א" "1" "ב" "2" "ג" "3" "ד" "4" "ה" "5" "ו" "6" "ז" "7" "ח" "8" "ט" "9" "י" "10" "כ"
    "11" "ל" "12" "מ" "13" "נ" "14" "ס" "15" "ע" "16" "פ" "17" "צ" "18" "ק" "19" "ר" "20" "ש" "21" "ת"
}}

{{ $args := parseArgs 1 "Usage: [number of letters] OR [number of groups]x[number of letters per group]"
    (carg "string" "argument")
}}

{{ $globalDict := (dbGet 0 "Global").Value }}
{{ $deleteTriggerDelay := toInt ($globalDict.Get "Delete Trigger Delay") }}
{{ $deleteResponseDelay := toInt ($globalDict.Get "Delete Response Delay") }}

{{ $gematriaDict := (dbGet 0 "Gematria").Value }}
{{ $sofitDict := $gematriaDict.Get "Final Letters" }}

{{ $commandsDict := (dbGet 0 "Commands").Value }}
{{ $embed_exec := toInt ($commandsDict.Get "embed_exec") }}
{{ $gematria := toInt ($commandsDict.Get "gematria") }}

{{ $channelsDict := (dbGet 0 "Channels").Value }}
{{ $yagpdbChannelID := toInt ($channelsDict.Get "YAGPDB") }}

{{ $arg := $args.Get 0 }}
{{ $trimmedArg := reReplace "\\A[[:space:]]+" $arg "" }}
{{ $trimmedArg = reReplace "[[:space:]]+\\z" $trimmedArg "" }}

{{ $groupModeArg := reFind "\\A\\d+x\\d+\\z" $trimmedArg }}
{{ $singleModeArg := reFind "\\A\\d+\\z" $trimmedArg }}
{{ $randString := "" }}
{{ if $groupModeArg }}
    {{ $subArgs := split $groupModeArg "x" }}
    {{ $numGroups := toInt (index $subArgs 0) }}
    {{ $numLetters := toInt (index $subArgs 1) }}
    {{- range $i := seq 0 $numGroups -}}
        {{- $curGroup := "" -}}
        {{- range $j := seq 0 $numLetters -}}
            {{- $randVal := toString (randInt 0 22) -}}
            {{- $randLetter := index $hebrewDict $randVal -}}
            {{- if and (gt $numLetters 1) (eq $j (sub $numLetters 1)) -}}
                {{- $randLetter = index $sofitDict $randLetter -}}
            {{- end -}}
            {{- $curGroup = joinStr "" $curGroup $randLetter -}}
        {{- end -}}
        {{- $randString = joinStr " " $randString $curGroup -}}
    {{- end -}}

    {{ execCC $gematria $yagpdbChannelID 0 (sdict
        "AuthorID" .User.ID
        "ChannelID" .Channel.ID
        "Title" "Hebrew Generator"
        "Description" $randString
    ) }}
{{ else if $singleModeArg }}
    {{ $numLetters := toInt $singleModeArg }}
    {{- range $i := seq 0 $numLetters -}}
        {{- $randVal := toString (randInt 0 22) -}}
        {{- $randLetter := index $hebrewDict $randVal -}}
        {{- if and (gt $numLetters 1) (eq $i (sub $numLetters 1)) -}}
            {{- $randLetter = index $sofitDict $randLetter -}}
        {{- end -}}
        {{- $randString = joinStr "" $randString $randLetter -}}
    {{- end -}}

    {{ execCC $gematria $yagpdbChannelID 0 (sdict
        "AuthorID" .User.ID
        "ChannelID" .Channel.ID
        "Title" "Hebrew Generator"
        "Description" $randString
    ) }}
{{ else }}
    {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
        "ChannelID" .Channel.ID
        "Title" "Invalid Argument"
        "Description" (joinStr "" "⚠️ The argument provided does not match the required format. Please try again.")
        "DeleteResponse" true
        "DeleteDelay" $deleteResponseDelay
    ) }}
{{ end }}

{{ deleteTrigger $deleteTriggerDelay }}
