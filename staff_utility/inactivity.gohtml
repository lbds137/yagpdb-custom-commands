{{- /*
  Author: Vladlena Costescu (@lbds137)
  Trigger type: `Command`
  Trigger: `inactivity`
  Dependencies: `embed_exec`, `db`
*/ -}}

{{ $args := parseArgs 1 "Please specify an action: `date`, `end`, `prune`, `remind`, or `start`."
    (carg "string" "action")
    (carg "string" "param (optional)")
}}

{{ $globalDict := (dbGet 0 "Global").Value }}
{{ $deleteTriggerDelay := toInt ($globalDict.Get "Delete Trigger Delay") }}
{{ $deleteResponseDelay := toInt ($globalDict.Get "Delete Response Delay") }}

{{ $commandsDict := (dbGet 0 "Commands").Value }}
{{ $embed_exec := toInt ($commandsDict.Get "embed_exec") }}
{{ $db := toInt ($commandsDict.Get "db") }}

{{ $rolesDict := (dbGet 0 "Roles").Value }}

{{ $channelsDict := (dbGet 0 "Channels").Value }}
{{ $yagpdbChannelID := toInt ($channelsDict.Get "YAGPDB") }}

{{ $pruneCategory := "Inactivity Prune" }}
{{ $pruneDict := (dbGet 0 $pruneCategory).Value }}
{{ $prevDate := $pruneDict.Get "Previous Date" }}
{{ $nextDate := $pruneDict.Get "Next Date" }}
{{ $messageThreshold := $pruneDict.Get "Message Threshold" }}
{{ $minuteThreshold := $pruneDict.Get "Minute Threshold" }}

{{ $action := $args.Get 0 }}
{{ $param := "" }}
{{ if $args.IsSet 1 }}
    {{ $param = $args.Get 1 }}
{{ end }}

{{ $isDate := eq $action "date" }}
{{ $isEnd := eq $action "end" }}
{{ $isPrune := eq $action "prune" }}
{{ $isRemind := eq $action "remind" }}
{{ $isStart := eq $action "start" }}

{{ if or $isDate $isEnd $isPrune $isRemind $isStart }}
    {{ $heading := "" }}
    {{ $result := "" }}
    {{ if or $isEnd $isRemind $isStart }}
        {{ $roleID := "" }}
        {{ if $isStart }}
            {{ $heading = "Opening Announcement" }}
            {{ $roleID = toInt ($rolesDict.Get "Member") }}
        {{ else if $isEnd }}
            {{ $heading = "Closing Announcement" }}
            {{ $roleID = toInt ($rolesDict.Get "Member") }}
        {{ else }}
            {{ $heading = "Reminder" }}
            {{ $roleID = toInt ($rolesDict.Get "Inactive") }}
        {{ end }}

        {{ $result = $pruneDict.Get $heading }}
        {{ $result = reReplace "\\#\\{previous_date\\}" $result $prevDate }}
        {{ $result = reReplace "\\#\\{next_date\\}" $result $nextDate }}
        {{ $result = reReplace "\\#\\{message_threshold\\}" $result $messageThreshold }}
        {{ $result = reReplace "\\#\\{minute_threshold\\}" $result $minuteThreshold }}

        {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
            "ChannelID" .Channel.ID
            "Title" (joinStr " " $pruneCategory $heading)
            "Description" $result
        ) }}

        {{ mentionRoleID $roleID }}
    {{ else if $isDate }}
        {{ if $param }}
            {{ $heading = "Date Editing" }}
            {{ execCC $db $yagpdbChannelID 0 (sdict
                "ChannelID" .Channel.ID
                "UserID" 0
                "Operation" "add"
                "Key" $pruneCategory
                "Value" (joinStr "" "{\"Previous Date\":\"" $nextDate "\"}")
                "Title" (joinStr " " $pruneCategory $heading)
            ) }}
            {{ execCC $db $yagpdbChannelID 0 (sdict
                "ChannelID" .Channel.ID
                "UserID" 0
                "Operation" "add"
                "Key" $pruneCategory
                "Value" (joinStr "" "{\"Next Date\":\"" $param "\"}")
                "Title" (joinStr " " $pruneCategory $heading)
            ) }}
        {{ else }}
            {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
                "ChannelID" .Channel.ID
                "Title" "Missing Date Parameter"
                "Description" "‚ö†Ô∏è You must enter a non-empty date parameter!"
                "DeleteResponse" true
                "DeleteDelay" $deleteResponseDelay
            ) }}
        {{ end }}
    {{ else if $isPrune }}
        {{ $userArg := userArg $param }}
        {{ if $userArg }}
            {{ $userID := $userArg.ID }}
            {{ $member := getMember $userID }}

            {{ $defaultAvatar := $globalDict.Get "Default Avatar" }}
            {{ $userAvatar := $member.User.AvatarURL "128" }}

            {{ $activeRoleID := toInt ($rolesDict.Get "Active") }}
            {{ $inactiveRoleID := toInt ($rolesDict.Get "Inactive") }}

            {{ $isActive := targetHasRoleID $userID $activeRoleID }}
            {{ $isInactive := targetHasRoleID $userID $inactiveRoleID }}

            {{ $reason := "" }}
            {{ if and (not $isActive) $isInactive }}
                {{ $kickReason := joinStr "" "pruned due to inactivity" }}
                {{ $reason = joinStr "" "The user was " $kickReason "." }}
                {{ $result = joinStr "" "ü•æ **" $member.User.String "** has been kicked!" }}
                {{ $silent := exec "kick" $userID $kickReason }}
            {{ else }}
                {{ $reason = "The user is not inactive." }}
                {{ $result = joinStr "" "‚ùå No action was taken against **" $member.User.String "**." }}
            {{ end }}

            {{ $fields := cslice (sdict "name" "Reason" "value" $reason) }}
            {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
                "ChannelID" .Channel.ID
                "Title" $pruneCategory
                "Description" $result
                "Fields" $fields
                "ThumbnailURL" (or $userAvatar $defaultAvatar)
            ) }}
        {{ else }}
            {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
                "ChannelID" .Channel.ID
                "Title" "Invalid User Parameter"
                "Description" "‚ö†Ô∏è You must enter a valid user parameter!"
                "DeleteResponse" true
                "DeleteDelay" $deleteResponseDelay
            ) }}
        {{ end }}
    {{ end }}
{{ else }}
    {{ execCC $embed_exec $yagpdbChannelID 0 (sdict
        "ChannelID" .Channel.ID
        "Title" "Invalid Action Specified"
        "Description" "‚ö†Ô∏è You must enter a valid action parameter!"
        "DeleteResponse" true
        "DeleteDelay" $deleteResponseDelay
    ) }}
{{ end }}

{{ deleteTrigger $deleteTriggerDelay }}
