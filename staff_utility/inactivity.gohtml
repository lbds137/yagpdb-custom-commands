{{- /*
  Author: Vladlena Costescu (@lbds137)
  Trigger type: `Command`
  Trigger: `inactivity`
  Dependencies: `embed_exec`, `db`
*/ -}}

{{ $args := parseArgs 1 "Please specify an action: `date`, `end`, `prune`, `remind`, or `start`."
    (carg "string" "action")
    (carg "string" "param (optional)")
}}

{{ $globalCategoryID := toInt (dbGet 0 "Global").Value }}
{{ $commandsCategoryID := toInt (dbGet 0 "Commands").Value }}
{{ $rolesCategoryID := toInt (dbGet 0 "Roles").Value }}
{{ $adminCategoryID := toInt (dbGet 0 "Admin").Value }}

{{ $deleteTriggerDelay := or (toInt (dbGet $globalCategoryID "Delete Trigger Delay").Value) 5 }}
{{ $deleteResponseDelay := or (toInt (dbGet $globalCategoryID "Delete Response Delay").Value) 5 }}
{{ $embed_exec := toInt (dbGet $commandsCategoryID "embed_exec").Value }}
{{ $db := toInt (dbGet $commandsCategoryID "db").Value }}
{{ $prevPruneDate := (dbGet $adminCategoryID "Previous Prune Date").Value }}
{{ $nextPruneDate := (dbGet $adminCategoryID "Next Prune Date").Value }}
{{ $pruneMessageThreshold := (dbGet $adminCategoryID "Prune Message Threshold").Value }}
{{ $pruneMinuteThreshold := (dbGet $adminCategoryID "Prune Minute Threshold").Value }}

{{ $action := $args.Get 0 }}
{{ $param := "" }}
{{ if $args.IsSet 1 }}
    {{ $param = $args.Get 1 }}
{{ end }}

{{ $isDate := eq $action "date" }}
{{ $isEnd := eq $action "end" }}
{{ $isPrune := eq $action "prune" }}
{{ $isRemind := eq $action "remind" }}
{{ $isStart := eq $action "start" }}

{{ if or $isDate $isEnd $isPrune $isRemind $isStart }}
    {{ $title := "" }}
    {{ $result := "" }}

    {{ if or $isEnd $isRemind $isStart }}
        {{ $roleID := "" }}

        {{ if $isStart }}
            {{ $title = "Inactivity Prune Opening Announcement" }}
            {{ $roleID = toInt (dbGet $rolesCategoryID "Member Role ID").Value }}
        {{ else if $isEnd }}
            {{ $title = "Inactivity Prune Closing Announcement" }}
            {{ $roleID = toInt (dbGet $rolesCategoryID "Member Role ID").Value }}
        {{ else }}
            {{ $title = "Inactivity Prune Reminder" }}
            {{ $roleID = toInt (dbGet $rolesCategoryID "Inactive Role ID").Value }}
        {{ end }}

        {{ $result = (dbGet $adminCategoryID $title).Value }}
        {{ $result = reReplace "\\#\\{previous_date\\}" $result $prevPruneDate }}
        {{ $result = reReplace "\\#\\{next_date\\}" $result $nextPruneDate }}
        {{ $result = reReplace "\\#\\{message_threshold\\}" $result $pruneMessageThreshold }}
        {{ $result = reReplace "\\#\\{minute_threshold\\}" $result $pruneMinuteThreshold }}

        {{ execCC $embed_exec .Channel.ID 0 (sdict "Title" $title "Description" $result) }}

        {{ mentionRoleID $roleID }}
    {{ else if $isDate }}
        {{ if $param }}
            {{ execCC $db .Channel.ID 0 (sdict
                "UserID" $adminCategoryID
                "Operation" "set"
                "Key" "Previous Prune Date"
                "Value" $nextPruneDate
                "Title" "Inactivity Prune Date Editing"
            ) }}
            {{ execCC $db .Channel.ID 0 (sdict
                "UserID" $adminCategoryID
                "Operation" "set"
                "Key" "Next Prune Date"
                "Value" $param
                "Title" "Inactivity Prune Date Editing"
            ) }}
        {{ else }}
            {{ execCC $embed_exec .Channel.ID 0 (sdict
                "Title" "Missing Date Parameter"
                "Description" "‚ö†Ô∏è You must enter a non-empty date parameter!"
                "DeleteResponse" true
                "DeleteDelay" $deleteResponseDelay
            ) }}
        {{ end }}
    {{ else if $isPrune }}
        {{ $userArg := userArg $param }}
        {{ if $userArg }}
            {{ $userID := $userArg.ID }}
            {{ $member := getMember $userID }}

            {{ $defaultAvatar := (dbGet $globalCategoryID "Default Avatar").Value }}
            {{ $userAvatar := $member.User.AvatarURL "128" }}

            {{ $activeRoleID := toInt (dbGet $rolesCategoryID "Active Role ID").Value }}
            {{ $inactiveRoleID := toInt (dbGet $rolesCategoryID "Inactive Role ID").Value }}

            {{ $isActive := targetHasRoleID $userID $activeRoleID }}
            {{ $isInactive := targetHasRoleID $userID $inactiveRoleID }}

            {{ $reason := "" }}
            {{ if and (not $isActive) $isInactive }}
                {{ $kickReason := joinStr "" "pruned due to inactivity" }}
                {{ $reason = joinStr "" "The user was " $kickReason "." }}
                {{ $result = joinStr "" "ü•æ **" $member.User.String "** has been kicked!" }}
                {{ $silent := exec "kick" $userID $kickReason }}
            {{ else }}
                {{ $reason = "The user is not inactive." }}
                {{ $result = joinStr "" "‚ùå No action was taken against **" $member.User.String "**." }}
            {{ end }}

            {{ $fields := cslice (sdict "name" "Reason" "value" $reason) }}
            {{ execCC $embed_exec .Channel.ID 0 (sdict
                "Title" "Inactivity Prune"
                "Description" $result
                "Fields" $fields
                "ThumbnailURL" (or $userAvatar $defaultAvatar)
            ) }}
        {{ else }}
            {{ execCC $embed_exec .Channel.ID 0 (sdict
                "Title" "Invalid User Parameter"
                "Description" "‚ö†Ô∏è You must enter a valid user parameter!"
                "DeleteResponse" true
                "DeleteDelay" $deleteResponseDelay
            ) }}
        {{ end }}
    {{ end }}
{{ else }}
    {{ execCC $embed_exec .Channel.ID 0 (sdict
        "Title" "Invalid Action Specified"
        "Description" "‚ö†Ô∏è You must enter a valid action parameter!"
        "DeleteResponse" true
        "DeleteDelay" $deleteResponseDelay
    ) }}
{{ end }}

{{ deleteTrigger $deleteTriggerDelay }}
